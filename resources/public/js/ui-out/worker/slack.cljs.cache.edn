{:rename-macros {}, :renames {}, :externs {JSON {stringify {}}, Error {}, console {log {}}, Object {}}, :use-macros {go cljs.core.async.macros}, :excludes #{}, :name worker.slack, :imports nil, :requires {http cljs-http.client, cljs-http.client cljs-http.client, cljs.core.async cljs.core.async, uri goog.uri.utils, goog.uri.utils goog.uri.utils, data data.core, data.core data.core}, :cljs.spec/speced-vars [], :uses {<! cljs.core.async}, :defs {query {:protocol-inline nil, :meta {:file "/Users/brian/projects/tomaat/src/worker/slack.cljs", :line 8, :column 7, :end-line 8, :end-column 12, :arglists (quote ([params])), :doc "Creates encoded query string params from a hash map"}, :name worker.slack/query, :variadic false, :file "/Users/brian/projects/tomaat/src/worker/slack.cljs", :end-column 12, :method-params ([params]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 8, :end-line 8, :max-fixed-arity 1, :fn-var true, :arglists (quote ([params])), :doc "Creates encoded query string params from a hash map"}, notify {:protocol-inline nil, :meta {:file "/Users/brian/projects/tomaat/src/worker/slack.cljs", :line 61, :column 7, :end-line 61, :end-column 13, :arglists (quote ([])), :doc "Notifies the user's slackbot channel that the pom is complete and it's time\n  to take a break from all their labors."}, :name worker.slack/notify, :variadic false, :file "/Users/brian/projects/tomaat/src/worker/slack.cljs", :end-column 13, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 61, :end-line 61, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Notifies the user's slackbot channel that the pom is complete and it's time\n  to take a break from all their labors."}, request {:protocol-inline nil, :meta {:file "/Users/brian/projects/tomaat/src/worker/slack.cljs", :line 27, :column 7, :end-line 27, :end-column 14, :arglists (quote ([action params])), :doc "Performs an http get request and returns a core.async channel"}, :name worker.slack/request, :variadic false, :file "/Users/brian/projects/tomaat/src/worker/slack.cljs", :end-column 14, :method-params ([action params]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 27, :end-line 27, :max-fixed-arity 2, :fn-var true, :arglists (quote ([action params])), :doc "Performs an http get request and returns a core.async channel"}, update-profile {:protocol-inline nil, :meta {:file "/Users/brian/projects/tomaat/src/worker/slack.cljs", :line 39, :column 7, :end-line 39, :end-column 21, :arglists (quote ([text emoji])), :doc "Updates token user's profile with the given text and emoji"}, :name worker.slack/update-profile, :variadic false, :file "/Users/brian/projects/tomaat/src/worker/slack.cljs", :end-column 21, :method-params ([text emoji]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 39, :end-line 39, :max-fixed-arity 2, :fn-var true, :arglists (quote ([text emoji])), :doc "Updates token user's profile with the given text and emoji"}, encode-json {:protocol-inline nil, :meta {:file "/Users/brian/projects/tomaat/src/worker/slack.cljs", :line 15, :column 7, :end-line 15, :end-column 18, :arglists (quote ([data])), :doc "Converts a hash map to json and encodes the whole structure"}, :name worker.slack/encode-json, :variadic false, :file "/Users/brian/projects/tomaat/src/worker/slack.cljs", :end-column 18, :method-params ([data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 1, :fn-var true, :arglists (quote ([data])), :doc "Converts a hash map to json and encodes the whole structure"}, with-token {:protocol-inline nil, :meta {:file "/Users/brian/projects/tomaat/src/worker/slack.cljs", :line 32, :column 7, :end-line 32, :end-column 17, :arglists (quote ([fn-request])), :doc "Executes the given function if a slack token has been stored"}, :name worker.slack/with-token, :variadic false, :file "/Users/brian/projects/tomaat/src/worker/slack.cljs", :end-column 17, :method-params ([fn-request]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 1, :fn-var true, :arglists (quote ([fn-request])), :doc "Executes the given function if a slack token has been stored"}, start-pomodoro {:protocol-inline nil, :meta {:file "/Users/brian/projects/tomaat/src/worker/slack.cljs", :line 49, :column 7, :end-line 49, :end-column 21, :arglists (quote ([event id])), :doc "Updates the token user's profile with pom text and a tomato!"}, :name worker.slack/start-pomodoro, :variadic false, :file "/Users/brian/projects/tomaat/src/worker/slack.cljs", :end-column 21, :method-params ([event id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 49, :end-line 49, :max-fixed-arity 2, :fn-var true, :arglists (quote ([event id])), :doc "Updates the token user's profile with pom text and a tomato!"}, complete-pomodoro {:name worker.slack/complete-pomodoro, :file "/Users/brian/projects/tomaat/src/worker/slack.cljs", :line 79, :column 1, :end-line 79, :end-column 23, :meta {:file "/Users/brian/projects/tomaat/src/worker/slack.cljs", :line 79, :column 6, :end-line 79, :end-column 23}, :tag any}, stop-pomodoro {:protocol-inline nil, :meta {:file "/Users/brian/projects/tomaat/src/worker/slack.cljs", :line 54, :column 7, :end-line 54, :end-column 20, :arglists (quote ([] [event id])), :doc "Stopping the pomodoro clears the user profile of any pom related business", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([] [event id]), :arglists ([] [event id]), :arglists-meta (nil nil)}}, :name worker.slack/stop-pomodoro, :variadic false, :file "/Users/brian/projects/tomaat/src/worker/slack.cljs", :end-column 20, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([] [event id]), :arglists ([] [event id]), :arglists-meta (nil nil)}, :method-params ([] [event id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 54, :end-line 54, :max-fixed-arity 2, :fn-var true, :arglists ([] [event id]), :doc "Stopping the pomodoro clears the user profile of any pom related business"}, url {:protocol-inline nil, :meta {:file "/Users/brian/projects/tomaat/src/worker/slack.cljs", :line 20, :column 7, :end-line 20, :end-column 10, :arglists (quote ([action params])), :doc "Create a slack api url"}, :name worker.slack/url, :variadic false, :file "/Users/brian/projects/tomaat/src/worker/slack.cljs", :end-column 10, :method-params ([action params]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 2, :fn-var true, :arglists (quote ([action params])), :doc "Create a slack api url"}}, :cljs.spec/registry-ref [], :require-macros {cljs.core.async.macros cljs.core.async.macros}, :cljs.analyzer/constants {:seen #{:status_text :else :as_user :channel :recur :token :icon_emoji :user_id :status_emoji :body :profile :text}, :order [:token :profile :status_text :status_emoji :body :user_id :channel :as_user :icon_emoji :text :recur :else]}, :doc nil}