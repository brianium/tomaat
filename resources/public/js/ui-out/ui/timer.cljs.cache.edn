{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name ui.timer, :imports nil, :requires {worker ui.worker, ui.worker ui.worker}, :cljs.spec/speced-vars [], :uses nil, :defs {start-timer {:protocol-inline nil, :meta {:file "/Users/brian/projects/tomaat/src/ui/timer.cljs", :line 4, :column 7, :end-line 4, :end-column 18, :arglists (quote ([])), :doc "Starts the timer in the worker process"}, :name ui.timer/start-timer, :variadic false, :file "/Users/brian/projects/tomaat/src/ui/timer.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 4, :end-line 4, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Starts the timer in the worker process"}, stop-timer {:protocol-inline nil, :meta {:file "/Users/brian/projects/tomaat/src/ui/timer.cljs", :line 9, :column 7, :end-line 9, :end-column 17, :arglists (quote ([])), :doc "Stops the timer in the worker process"}, :name ui.timer/stop-timer, :variadic false, :file "/Users/brian/projects/tomaat/src/ui/timer.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Stops the timer in the worker process"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc nil}