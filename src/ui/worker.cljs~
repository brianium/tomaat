(ns ui.timer
  (:require [electron :refer [remote ipcRenderer]]))

(def BrowserWindow (.-BrowserWindow remote))

(defn send-start-timer
  [worker id]
  (-> worker
      .-webContents
      (.send "start-timer" id)))

(defn message
  "Sends a message to the worker window with the given arguments.
  The on-load function will be called with the worker BrowserWindow, the
  current window id, and any additional arguments passed in"
  [on-load & rest]
  (let [id     (->> BrowserWindow .getFocusedWindow .-id)
        path   (str "file://" js/__dirname "/worker.html")
        worker (BrowserWindow. #js {:width 400 :height 400 :show false})]
    (.loadURL worker path)
    (-> worker
        .-webContents
        (.on "did-finish-load"
          #(apply on-load (concat [worker id] rest))))))
