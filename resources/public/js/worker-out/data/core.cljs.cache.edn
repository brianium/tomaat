{:rename-macros {}, :renames {}, :externs {JSON {parse {}, stringify {}}, Object {}}, :use-macros {}, :excludes #{}, :name data.core, :imports nil, :requires {electron electron, path path, fs fs}, :cljs.spec/speced-vars [], :uses {join path, remote electron, writeFileSync fs, readFileSync fs, app electron}, :defs {db-path {:protocol-inline nil, :meta {:file "/Users/brian/projects/tomaat/src/data/core.cljs", :line 6, :column 7, :end-line 6, :end-column 14, :arglists (quote ([]))}, :name data.core/db-path, :variadic false, :file "/Users/brian/projects/tomaat/src/data/core.cljs", :end-column 14, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, json-parse {:protocol-inline nil, :meta {:file "/Users/brian/projects/tomaat/src/data/core.cljs", :line 11, :column 7, :end-line 11, :end-column 17, :arglists (quote ([string]))}, :name data.core/json-parse, :variadic false, :file "/Users/brian/projects/tomaat/src/data/core.cljs", :end-column 17, :method-params ([string]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 1, :fn-var true, :arglists (quote ([string]))}, json-stringify {:protocol-inline nil, :meta {:file "/Users/brian/projects/tomaat/src/data/core.cljs", :line 15, :column 7, :end-line 15, :end-column 21, :arglists (quote ([data]))}, :name data.core/json-stringify, :variadic false, :file "/Users/brian/projects/tomaat/src/data/core.cljs", :end-column 21, :method-params ([data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 1, :fn-var true, :arglists (quote ([data]))}, read {:protocol-inline nil, :meta {:file "/Users/brian/projects/tomaat/src/data/core.cljs", :line 19, :column 7, :end-line 19, :end-column 11, :arglists (quote ([]))}, :name data.core/read, :variadic false, :file "/Users/brian/projects/tomaat/src/data/core.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, write-file-sync {:protocol-inline nil, :meta {:file "/Users/brian/projects/tomaat/src/data/core.cljs", :line 28, :column 8, :end-line 28, :end-column 23, :private true, :arglists (quote ([data path]))}, :private true, :name data.core/write-file-sync, :variadic false, :file "/Users/brian/projects/tomaat/src/data/core.cljs", :end-column 23, :method-params ([data path]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 28, :max-fixed-arity 2, :fn-var true, :arglists (quote ([data path]))}, write {:protocol-inline nil, :meta {:file "/Users/brian/projects/tomaat/src/data/core.cljs", :line 32, :column 7, :end-line 32, :end-column 12, :arglists (quote ([data]))}, :name data.core/write, :variadic false, :file "/Users/brian/projects/tomaat/src/data/core.cljs", :end-column 12, :method-params ([data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 1, :fn-var true, :arglists (quote ([data]))}}, :cljs.spec/registry-ref [], :require-macros nil, :cljs.analyzer/constants {:seen #{:else :keywordize-keys}, :order [:else :keywordize-keys]}, :doc nil}