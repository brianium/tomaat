{:rename-macros {}, :renames {}, :externs {Error {}, console {}}, :use-macros {with-let reagent.ratom, log reagent.debug, dbg reagent.debug, warn reagent.debug, dev? reagent.debug, time reagent.debug, error reagent.debug}, :excludes #{atom}, :name reagent.ratom, :imports nil, :requires {util reagent.impl.util, reagent.impl.util reagent.impl.util, reagent.debug reagent.debug, batch reagent.impl.batching, reagent.impl.batching reagent.impl.batching, s clojure.set, clojure.set clojure.set}, :cljs.spec/speced-vars [], :uses nil, :defs {pr-atom {:protocol-inline nil, :meta {:file "/Users/brian/projects/tomaat/.cljs_node_repl/reagent/ratom.cljs", :line 89, :column 8, :end-line 89, :end-column 15, :private true, :arglists (quote ([a writer opts s]))}, :private true, :name reagent.ratom/pr-atom, :variadic false, :file ".cljs_node_repl/reagent/ratom.cljs", :end-column 15, :method-params ([a writer opts s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 89, :end-line 89, :max-fixed-arity 4, :fn-var true, :arglists (quote ([a writer opts s]))}, ->RCursor {:protocol-inline nil, :meta {:file "/Users/brian/projects/tomaat/.cljs_node_repl/reagent/ratom.cljs", :line 240, :column 10, :end-line 240, :end-column 17, :protocols #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash cljs.core/IReset cljs.core/ISwap reagent.ratom/IReactiveAtom cljs.core/IDeref cljs.core/IPrintWithWriter reagent.ratom/Object}, :skip-protocol-flag #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash cljs.core/IReset cljs.core/ISwap cljs.core/IDeref cljs.core/IPrintWithWriter}, :factory :positional, :arglists (quote ([ratom path reaction state watches]))}, :protocols #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash cljs.core/IReset cljs.core/ISwap reagent.ratom/IReactiveAtom cljs.core/IDeref cljs.core/IPrintWithWriter reagent.ratom/Object}, :name reagent.ratom/->RCursor, :variadic false, :file ".cljs_node_repl/reagent/ratom.cljs", :end-column 17, :method-params ([ratom path reaction state watches]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :line 240, :end-line 240, :max-fixed-arity 5, :fn-var true, :arglists (quote ([ratom path reaction state watches])), :skip-protocol-flag #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash cljs.core/IReset cljs.core/ISwap cljs.core/IDeref cljs.core/IPrintWithWriter}}, notify-deref-watcher! {:protocol-inline nil, :meta {:file "/Users/brian/projects/tomaat/.cljs_node_repl/reagent/ratom.cljs", :line 51, :column 8, :end-line 51, :end-column 29, :private true, :arglists (quote ([derefed]))}, :private true, :name reagent.ratom/notify-deref-watcher!, :variadic false, :file ".cljs_node_repl/reagent/ratom.cljs", :end-column 29, :method-params ([derefed]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 51, :end-line 51, :max-fixed-arity 1, :fn-var true, :arglists (quote ([derefed]))}, rea-enqueue {:protocol-inline nil, :meta {:file "/Users/brian/projects/tomaat/.cljs_node_repl/reagent/ratom.cljs", :line 99, :column 8, :end-line 99, :end-column 19, :private true, :arglists (quote ([r]))}, :private true, :name reagent.ratom/rea-enqueue, :variadic false, :file ".cljs_node_repl/reagent/ratom.cljs", :end-column 19, :method-params ([r]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 99, :end-line 99, :max-fixed-arity 1, :fn-var true, :arglists (quote ([r]))}, in-context {:protocol-inline nil, :meta {:file "/Users/brian/projects/tomaat/.cljs_node_repl/reagent/ratom.cljs", :line 35, :column 8, :end-line 35, :end-column 18, :private true, :arglists (quote ([obj f]))}, :private true, :name reagent.ratom/in-context, :variadic false, :file ".cljs_node_repl/reagent/ratom.cljs", :end-column 18, :method-params ([obj f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 35, :end-line 35, :max-fixed-arity 2, :fn-var true, :arglists (quote ([obj f]))}, make-track {:protocol-inline nil, :meta {:file "/Users/brian/projects/tomaat/.cljs_node_repl/reagent/ratom.cljs", :line 220, :column 7, :end-line 220, :end-column 17, :arglists (quote ([f args]))}, :name reagent.ratom/make-track, :variadic false, :file ".cljs_node_repl/reagent/ratom.cljs", :end-column 17, :method-params ([f args]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 220, :end-line 220, :max-fixed-arity 2, :fn-var true, :arglists (quote ([f args]))}, RAtom {:num-fields 4, :protocols #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash cljs.core/IReset cljs.core/ISwap reagent.ratom/IReactiveAtom cljs.core/IMeta cljs.core/IDeref cljs.core/IPrintWithWriter}, :name reagent.ratom/RAtom, :file ".cljs_node_repl/reagent/ratom.cljs", :end-column 15, :type true, :column 10, :line 121, :record false, :end-line 121, :skip-protocol-flag #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash cljs.core/IReset cljs.core/ISwap cljs.core/IMeta cljs.core/IDeref cljs.core/IPrintWithWriter}}, atom {:protocol-inline nil, :meta {:file "/Users/brian/projects/tomaat/.cljs_node_repl/reagent/ratom.cljs", :line 163, :column 7, :end-line 163, :end-column 11, :arglists (quote ([x] [x & {:keys [meta validator]}])), :doc "Like clojure.core/atom, except that it keeps track of derefs.", :top-fn {:variadic true, :max-fixed-arity 1, :method-params ([x]), :arglists ([x] [x & {:keys [meta validator]}]), :arglists-meta (nil nil)}}, :name reagent.ratom/atom, :variadic true, :file ".cljs_node_repl/reagent/ratom.cljs", :end-column 11, :top-fn {:variadic true, :max-fixed-arity 1, :method-params ([x]), :arglists ([x] [x & {:keys [meta validator]}]), :arglists-meta (nil nil)}, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 163, :end-line 163, :max-fixed-arity 1, :fn-var true, :arglists ([x] [x & {:keys [meta validator]}]), :doc "Like clojure.core/atom, except that it keeps track of derefs."}, notify-w {:protocol-inline nil, :meta {:file "/Users/brian/projects/tomaat/.cljs_node_repl/reagent/ratom.cljs", :line 73, :column 8, :end-line 73, :end-column 16, :private true, :arglists (quote ([this old new]))}, :private true, :name reagent.ratom/notify-w, :variadic false, :file ".cljs_node_repl/reagent/ratom.cljs", :end-column 16, :method-params ([this old new]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 73, :end-line 73, :max-fixed-arity 3, :fn-var true, :arglists (quote ([this old new]))}, ->Reaction {:protocol-inline nil, :meta {:file "/Users/brian/projects/tomaat/.cljs_node_repl/reagent/ratom.cljs", :line 338, :column 10, :end-line 338, :end-column 18, :protocols #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash cljs.core/IReset cljs.core/ISwap reagent.ratom/IReactiveAtom reagent.ratom/IRunnable reagent.ratom/IDisposable cljs.core/IDeref cljs.core/IPrintWithWriter reagent.ratom/Object}, :skip-protocol-flag #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash cljs.core/IReset cljs.core/ISwap cljs.core/IDeref cljs.core/IPrintWithWriter}, :factory :positional, :arglists (quote ([f state dirty? nocache? watching watches auto-run caught]))}, :protocols #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash cljs.core/IReset cljs.core/ISwap reagent.ratom/IReactiveAtom reagent.ratom/IRunnable reagent.ratom/IDisposable cljs.core/IDeref cljs.core/IPrintWithWriter reagent.ratom/Object}, :name reagent.ratom/->Reaction, :variadic false, :file ".cljs_node_repl/reagent/ratom.cljs", :end-column 18, :method-params ([f state dirty? nocache? watching watches auto-run caught]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :line 338, :end-line 338, :max-fixed-arity 8, :fn-var true, :arglists (quote ([f state dirty? nocache? watching watches auto-run caught])), :skip-protocol-flag #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash cljs.core/IReset cljs.core/ISwap cljs.core/IDeref cljs.core/IPrintWithWriter}}, make-wrapper {:protocol-inline nil, :meta {:file "/Users/brian/projects/tomaat/.cljs_node_repl/reagent/ratom.cljs", :line 565, :column 7, :end-line 565, :end-column 19, :arglists (quote ([value callback-fn args]))}, :name reagent.ratom/make-wrapper, :variadic false, :file ".cljs_node_repl/reagent/ratom.cljs", :end-column 19, :method-params ([value callback-fn args]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 565, :end-line 565, :max-fixed-arity 3, :fn-var true, :arglists (quote ([value callback-fn args]))}, IReactiveAtom {:meta {:file "/Users/brian/projects/tomaat/.cljs_node_repl/reagent/ratom.cljs", :line 119, :column 14, :end-line 119, :end-column 27, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {}}}, :protocol-symbol true, :name reagent.ratom/IReactiveAtom, :file ".cljs_node_repl/reagent/ratom.cljs", :end-column 27, :column 1, :line 119, :protocol-info {:methods {}}, :info nil, :end-line 119, :tag any, :impls #{reagent.ratom/RCursor reagent.ratom/Track reagent.ratom/Reaction reagent.ratom/RAtom}, :doc nil, :jsdoc ("@interface")}, track {:protocol-inline nil, :meta {:file "/Users/brian/projects/tomaat/.cljs_node_repl/reagent/ratom.cljs", :line 230, :column 7, :end-line 230, :end-column 12, :arglists (quote ([f & args])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(f args)], :arglists ([f & args]), :arglists-meta (nil)}}, :name reagent.ratom/track, :variadic true, :file ".cljs_node_repl/reagent/ratom.cljs", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(f args)], :arglists ([f & args]), :arglists-meta (nil)}, :method-params [(f args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 230, :end-line 230, :max-fixed-arity 1, :fn-var true, :arglists ([f & args])}, dispose! {:protocol-inline nil, :meta {:file "/Users/brian/projects/tomaat/.cljs_node_repl/reagent/ratom.cljs", :line 328, :column 4, :end-line 328, :end-column 12, :protocol reagent.ratom/IDisposable, :doc nil, :arglists (quote ([this]))}, :protocol reagent.ratom/IDisposable, :name reagent.ratom/dispose!, :variadic false, :file ".cljs_node_repl/reagent/ratom.cljs", :end-column 12, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 327, :end-line 328, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc nil}, arr-eq {:protocol-inline nil, :meta {:file "/Users/brian/projects/tomaat/.cljs_node_repl/reagent/ratom.cljs", :line 26, :column 17, :end-line 26, :end-column 23, :tag boolean, :private true, :arglists (quote ([x y]))}, :private true, :name reagent.ratom/arr-eq, :variadic false, :file ".cljs_node_repl/reagent/ratom.cljs", :end-column 23, :method-params ([x y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 26, :ret-tag boolean, :end-line 26, :max-fixed-arity 2, :tag boolean, :fn-var true, :arglists (quote ([x y]))}, handle-reaction-change {:protocol-inline nil, :meta {:file "/Users/brian/projects/tomaat/.cljs_node_repl/reagent/ratom.cljs", :line 334, :column 8, :end-line 334, :end-column 30, :private true, :arglists (quote ([this sender old new]))}, :private true, :name reagent.ratom/handle-reaction-change, :variadic false, :file ".cljs_node_repl/reagent/ratom.cljs", :end-column 30, :method-params ([this sender old new]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 334, :end-line 334, :max-fixed-arity 4, :fn-var true, :arglists (quote ([this sender old new]))}, run {:protocol-inline nil, :meta {:file "/Users/brian/projects/tomaat/.cljs_node_repl/reagent/ratom.cljs", :line 332, :column 4, :end-line 332, :end-column 7, :protocol reagent.ratom/IRunnable, :doc nil, :arglists (quote ([this]))}, :protocol reagent.ratom/IRunnable, :name reagent.ratom/run, :variadic false, :file ".cljs_node_repl/reagent/ratom.cljs", :end-column 7, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 331, :end-line 332, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc nil}, add-on-dispose! {:protocol-inline nil, :meta {:file "/Users/brian/projects/tomaat/.cljs_node_repl/reagent/ratom.cljs", :line 329, :column 4, :end-line 329, :end-column 19, :protocol reagent.ratom/IDisposable, :doc nil, :arglists (quote ([this f]))}, :protocol reagent.ratom/IDisposable, :name reagent.ratom/add-on-dispose!, :variadic false, :file ".cljs_node_repl/reagent/ratom.cljs", :end-column 19, :method-params ([this f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 327, :end-line 329, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this f])), :doc nil}, temp-reaction {:name reagent.ratom/temp-reaction, :file ".cljs_node_repl/reagent/ratom.cljs", :line 497, :column 1, :end-line 497, :end-column 29, :private true, :meta {:file "/Users/brian/projects/tomaat/.cljs_node_repl/reagent/ratom.cljs", :line 497, :column 16, :end-line 497, :end-column 29, :private true}, :tag any}, cache-key {:meta {:file "/Users/brian/projects/tomaat/.cljs_node_repl/reagent/ratom.cljs", :line 173, :column 35, :end-line 173, :end-column 44, :private true, :const true}, :private true, :name reagent.ratom/cache-key, :file ".cljs_node_repl/reagent/ratom.cljs", :end-column 44, :const-expr {:op :constant, :env {:context :expr}, :form "reagReactionCache", :tag string}, :column 1, :const true, :line 173, :end-line 173, :tag string}, make-track! {:protocol-inline nil, :meta {:file "/Users/brian/projects/tomaat/.cljs_node_repl/reagent/ratom.cljs", :line 223, :column 7, :end-line 223, :end-column 18, :arglists (quote ([f args]))}, :name reagent.ratom/make-track!, :variadic false, :file ".cljs_node_repl/reagent/ratom.cljs", :end-column 18, :method-params ([f args]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 223, :end-line 223, :max-fixed-arity 2, :fn-var true, :arglists (quote ([f args]))}, generation {:name reagent.ratom/generation, :file ".cljs_node_repl/reagent/ratom.cljs", :line 11, :column 1, :end-line 11, :end-column 30, :private true, :meta {:file "/Users/brian/projects/tomaat/.cljs_node_repl/reagent/ratom.cljs", :line 11, :column 20, :end-line 11, :end-column 30, :private true}, :tag number}, run-in-reaction {:protocol-inline nil, :meta {:file "/Users/brian/projects/tomaat/.cljs_node_repl/reagent/ratom.cljs", :line 499, :column 7, :end-line 499, :end-column 22, :arglists (quote ([f obj key run opts]))}, :name reagent.ratom/run-in-reaction, :variadic false, :file ".cljs_node_repl/reagent/ratom.cljs", :end-column 22, :method-params ([f obj key run opts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 499, :end-line 499, :max-fixed-arity 5, :fn-var true, :arglists (quote ([f obj key run opts]))}, IDisposable {:meta {:file "/Users/brian/projects/tomaat/.cljs_node_repl/reagent/ratom.cljs", :line 327, :column 14, :end-line 327, :end-column 25, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {dispose! [[this]], add-on-dispose! [[this f]]}}}, :protocol-symbol true, :name reagent.ratom/IDisposable, :file ".cljs_node_repl/reagent/ratom.cljs", :end-column 25, :column 1, :line 327, :protocol-info {:methods {dispose! [[this]], add-on-dispose! [[this f]]}}, :info nil, :end-line 327, :tag any, :impls #{reagent.ratom/Reaction}, :doc nil, :jsdoc ("@interface")}, check-watches {:protocol-inline nil, :meta {:file "/Users/brian/projects/tomaat/.cljs_node_repl/reagent/ratom.cljs", :line 58, :column 8, :end-line 58, :end-column 21, :private true, :arglists (quote ([old new]))}, :private true, :name reagent.ratom/check-watches, :variadic false, :file ".cljs_node_repl/reagent/ratom.cljs", :end-column 21, :method-params ([old new]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 58, :end-line 58, :max-fixed-arity 2, :fn-var true, :arglists (quote ([old new]))}, with-let-destroy {:protocol-inline nil, :meta {:file "/Users/brian/projects/tomaat/.cljs_node_repl/reagent/ratom.cljs", :line 314, :column 7, :end-line 314, :end-column 23, :arglists (quote ([v]))}, :name reagent.ratom/with-let-destroy, :variadic false, :file ".cljs_node_repl/reagent/ratom.cljs", :end-column 23, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 314, :end-line 314, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v]))}, make-reaction {:protocol-inline nil, :meta {:file "/Users/brian/projects/tomaat/.cljs_node_repl/reagent/ratom.cljs", :line 488, :column 7, :end-line 488, :end-column 20, :arglists (quote ([f & {:keys [auto-run on-set on-dispose]}])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(f {:keys [auto-run on-set on-dispose]})], :arglists ([f & {:keys [auto-run on-set on-dispose]}]), :arglists-meta (nil)}}, :name reagent.ratom/make-reaction, :variadic true, :file ".cljs_node_repl/reagent/ratom.cljs", :end-column 20, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(f {:keys [auto-run on-set on-dispose]})], :arglists ([f & {:keys [auto-run on-set on-dispose]}]), :arglists-meta (nil)}, :method-params [(f {:keys [auto-run on-set on-dispose]})], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 488, :end-line 488, :max-fixed-arity 1, :fn-var true, :arglists ([f & {:keys [auto-run on-set on-dispose]}])}, add-w {:protocol-inline nil, :meta {:file "/Users/brian/projects/tomaat/.cljs_node_repl/reagent/ratom.cljs", :line 63, :column 8, :end-line 63, :end-column 13, :private true, :arglists (quote ([this key f]))}, :private true, :name reagent.ratom/add-w, :variadic false, :file ".cljs_node_repl/reagent/ratom.cljs", :end-column 13, :method-params ([this key f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 63, :end-line 63, :max-fixed-arity 3, :fn-var true, :arglists (quote ([this key f]))}, Reaction {:num-fields 8, :protocols #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash cljs.core/IReset cljs.core/ISwap reagent.ratom/IReactiveAtom reagent.ratom/IRunnable reagent.ratom/IDisposable cljs.core/IDeref cljs.core/IPrintWithWriter reagent.ratom/Object}, :name reagent.ratom/Reaction, :file ".cljs_node_repl/reagent/ratom.cljs", :end-column 18, :type true, :column 10, :line 338, :record false, :end-line 338, :skip-protocol-flag #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash cljs.core/IReset cljs.core/ISwap cljs.core/IDeref cljs.core/IPrintWithWriter}}, flush! {:protocol-inline nil, :meta {:file "/Users/brian/projects/tomaat/.cljs_node_repl/reagent/ratom.cljs", :line 105, :column 7, :end-line 105, :end-column 13, :arglists (quote ([]))}, :name reagent.ratom/flush!, :variadic false, :file ".cljs_node_repl/reagent/ratom.cljs", :end-column 13, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 105, :end-line 105, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, RCursor {:num-fields 5, :protocols #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash cljs.core/IReset cljs.core/ISwap reagent.ratom/IReactiveAtom cljs.core/IDeref cljs.core/IPrintWithWriter reagent.ratom/Object}, :name reagent.ratom/RCursor, :file ".cljs_node_repl/reagent/ratom.cljs", :end-column 17, :type true, :column 10, :line 240, :record false, :end-line 240, :skip-protocol-flag #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash cljs.core/IReset cljs.core/ISwap cljs.core/IDeref cljs.core/IPrintWithWriter}}, cached-reaction {:protocol-inline nil, :meta {:file "/Users/brian/projects/tomaat/.cljs_node_repl/reagent/ratom.cljs", :line 175, :column 8, :end-line 175, :end-column 23, :private true, :arglists (quote ([f o k obj destroy]))}, :private true, :name reagent.ratom/cached-reaction, :variadic false, :file ".cljs_node_repl/reagent/ratom.cljs", :end-column 23, :method-params ([f o k obj destroy]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 175, :end-line 175, :max-fixed-arity 5, :fn-var true, :arglists (quote ([f o k obj destroy]))}, Track {:num-fields 3, :protocols #{cljs.core/IEquiv cljs.core/IHash reagent.ratom/IReactiveAtom cljs.core/IDeref cljs.core/IPrintWithWriter}, :name reagent.ratom/Track, :file ".cljs_node_repl/reagent/ratom.cljs", :end-column 15, :type true, :column 10, :line 199, :record false, :end-line 199, :skip-protocol-flag #{cljs.core/IEquiv cljs.core/IHash cljs.core/IDeref cljs.core/IPrintWithWriter}}, debug {:name reagent.ratom/debug, :file ".cljs_node_repl/reagent/ratom.cljs", :line 10, :column 1, :end-line 10, :end-column 24, :tag boolean, :meta {:file "/Users/brian/projects/tomaat/.cljs_node_repl/reagent/ratom.cljs", :line 10, :column 19, :end-line 10, :end-column 24, :tag boolean}}, -running {:name reagent.ratom/-running, :file ".cljs_node_repl/reagent/ratom.cljs", :line 12, :column 1, :end-line 12, :end-column 28, :private true, :meta {:file "/Users/brian/projects/tomaat/.cljs_node_repl/reagent/ratom.cljs", :line 12, :column 20, :end-line 12, :end-column 28, :private true}, :tag any}, cursor {:protocol-inline nil, :meta {:file "/Users/brian/projects/tomaat/.cljs_node_repl/reagent/ratom.cljs", :line 302, :column 7, :end-line 302, :end-column 13, :arglists (quote ([src path]))}, :name reagent.ratom/cursor, :variadic false, :file ".cljs_node_repl/reagent/ratom.cljs", :end-column 13, :method-params ([src path]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 302, :end-line 302, :max-fixed-arity 2, :fn-var true, :arglists (quote ([src path]))}, Wrapper {:num-fields 4, :protocols #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IReset cljs.core/ISwap cljs.core/IDeref cljs.core/IPrintWithWriter}, :name reagent.ratom/Wrapper, :file ".cljs_node_repl/reagent/ratom.cljs", :end-column 17, :type true, :column 10, :line 518, :record false, :end-line 518, :skip-protocol-flag #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IReset cljs.core/ISwap cljs.core/IDeref cljs.core/IPrintWithWriter}}, running {:protocol-inline nil, :meta {:file "/Users/brian/projects/tomaat/.cljs_node_repl/reagent/ratom.cljs", :line 20, :column 7, :end-line 20, :end-column 14, :arglists (quote ([]))}, :name reagent.ratom/running, :variadic false, :file ".cljs_node_repl/reagent/ratom.cljs", :end-column 14, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, IRunnable {:meta {:file "/Users/brian/projects/tomaat/.cljs_node_repl/reagent/ratom.cljs", :line 331, :column 14, :end-line 331, :end-column 23, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {run [[this]]}}}, :protocol-symbol true, :name reagent.ratom/IRunnable, :file ".cljs_node_repl/reagent/ratom.cljs", :end-column 23, :column 1, :line 331, :protocol-info {:methods {run [[this]]}}, :info nil, :end-line 331, :tag any, :impls #{reagent.ratom/Reaction}, :doc nil, :jsdoc ("@interface")}, reactive? {:protocol-inline nil, :meta {:file "/Users/brian/projects/tomaat/.cljs_node_repl/reagent/ratom.cljs", :line 14, :column 16, :end-line 14, :end-column 25, :tag boolean, :arglists (quote ([]))}, :name reagent.ratom/reactive?, :variadic false, :file ".cljs_node_repl/reagent/ratom.cljs", :end-column 25, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :ret-tag boolean, :end-line 14, :max-fixed-arity 0, :tag boolean, :fn-var true, :arglists (quote ([]))}, deref-capture {:protocol-inline nil, :meta {:file "/Users/brian/projects/tomaat/.cljs_node_repl/reagent/ratom.cljs", :line 39, :column 8, :end-line 39, :end-column 21, :private true, :arglists (quote ([f r]))}, :private true, :name reagent.ratom/deref-capture, :variadic false, :file ".cljs_node_repl/reagent/ratom.cljs", :end-column 21, :method-params ([f r]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 39, :end-line 39, :max-fixed-arity 2, :fn-var true, :arglists (quote ([f r]))}, rea-queue {:name reagent.ratom/rea-queue, :file ".cljs_node_repl/reagent/ratom.cljs", :line 97, :column 1, :end-line 97, :end-column 29, :private true, :meta {:file "/Users/brian/projects/tomaat/.cljs_node_repl/reagent/ratom.cljs", :line 97, :column 20, :end-line 97, :end-column 29, :private true}, :tag clj-nil}, with-let-values {:protocol-inline nil, :meta {:file "/Users/brian/projects/tomaat/.cljs_node_repl/reagent/ratom.cljs", :line 318, :column 7, :end-line 318, :end-column 22, :arglists (quote ([key]))}, :name reagent.ratom/with-let-values, :variadic false, :file ".cljs_node_repl/reagent/ratom.cljs", :end-column 22, :method-params ([key]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 318, :end-line 318, :max-fixed-arity 1, :fn-var true, :arglists (quote ([key]))}, track! {:protocol-inline nil, :meta {:file "/Users/brian/projects/tomaat/.cljs_node_repl/reagent/ratom.cljs", :line 234, :column 7, :end-line 234, :end-column 13, :arglists (quote ([f & args])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(f args)], :arglists ([f & args]), :arglists-meta (nil)}}, :name reagent.ratom/track!, :variadic true, :file ".cljs_node_repl/reagent/ratom.cljs", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(f args)], :arglists ([f & args]), :arglists-meta (nil)}, :method-params [(f args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 234, :end-line 234, :max-fixed-arity 1, :fn-var true, :arglists ([f & args])}, *ratom-context* {:name reagent.ratom/*ratom-context*, :file ".cljs_node_repl/reagent/ratom.cljs", :line 9, :column 1, :end-line 9, :end-column 35, :dynamic true, :declared true, :meta {:file "/Users/brian/projects/tomaat/.cljs_node_repl/reagent/ratom.cljs", :line 9, :column 20, :end-line 9, :end-column 35, :dynamic true, :declared true}}, check-derefs {:protocol-inline nil, :meta {:file "/Users/brian/projects/tomaat/.cljs_node_repl/reagent/ratom.cljs", :line 510, :column 7, :end-line 510, :end-column 19, :arglists (quote ([f]))}, :name reagent.ratom/check-derefs, :variadic false, :file ".cljs_node_repl/reagent/ratom.cljs", :end-column 19, :method-params ([f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 510, :end-line 510, :max-fixed-arity 1, :fn-var true, :arglists (quote ([f]))}, remove-w {:protocol-inline nil, :meta {:file "/Users/brian/projects/tomaat/.cljs_node_repl/reagent/ratom.cljs", :line 68, :column 8, :end-line 68, :end-column 16, :private true, :arglists (quote ([this key]))}, :private true, :name reagent.ratom/remove-w, :variadic false, :file ".cljs_node_repl/reagent/ratom.cljs", :end-column 16, :method-params ([this key]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 68, :end-line 68, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this key]))}, ->Wrapper {:protocol-inline nil, :meta {:file "/Users/brian/projects/tomaat/.cljs_node_repl/reagent/ratom.cljs", :line 518, :column 10, :end-line 518, :end-column 17, :protocols #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IReset cljs.core/ISwap cljs.core/IDeref cljs.core/IPrintWithWriter}, :skip-protocol-flag #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IReset cljs.core/ISwap cljs.core/IDeref cljs.core/IPrintWithWriter}, :factory :positional, :arglists (quote ([state callback changed watches]))}, :protocols #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IReset cljs.core/ISwap cljs.core/IDeref cljs.core/IPrintWithWriter}, :name reagent.ratom/->Wrapper, :variadic false, :file ".cljs_node_repl/reagent/ratom.cljs", :end-column 17, :method-params ([state callback changed watches]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :line 518, :end-line 518, :max-fixed-arity 4, :fn-var true, :arglists (quote ([state callback changed watches])), :skip-protocol-flag #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IReset cljs.core/ISwap cljs.core/IDeref cljs.core/IPrintWithWriter}}, arr-len {:protocol-inline nil, :meta {:file "/Users/brian/projects/tomaat/.cljs_node_repl/reagent/ratom.cljs", :line 23, :column 16, :end-line 23, :end-column 23, :tag number, :private true, :arglists (quote ([x]))}, :private true, :name reagent.ratom/arr-len, :variadic false, :file ".cljs_node_repl/reagent/ratom.cljs", :end-column 23, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :ret-tag number, :end-line 23, :max-fixed-arity 1, :tag number, :fn-var true, :arglists (quote ([x]))}, ->RAtom {:protocol-inline nil, :meta {:file "/Users/brian/projects/tomaat/.cljs_node_repl/reagent/ratom.cljs", :line 121, :column 10, :end-line 121, :end-column 15, :protocols #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash cljs.core/IReset cljs.core/ISwap reagent.ratom/IReactiveAtom cljs.core/IMeta cljs.core/IDeref cljs.core/IPrintWithWriter}, :skip-protocol-flag #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash cljs.core/IReset cljs.core/ISwap cljs.core/IMeta cljs.core/IDeref cljs.core/IPrintWithWriter}, :factory :positional, :arglists (quote ([state meta validator watches]))}, :protocols #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash cljs.core/IReset cljs.core/ISwap reagent.ratom/IReactiveAtom cljs.core/IMeta cljs.core/IDeref cljs.core/IPrintWithWriter}, :name reagent.ratom/->RAtom, :variadic false, :file ".cljs_node_repl/reagent/ratom.cljs", :end-column 15, :method-params ([state meta validator watches]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :line 121, :end-line 121, :max-fixed-arity 4, :fn-var true, :arglists (quote ([state meta validator watches])), :skip-protocol-flag #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash cljs.core/IReset cljs.core/ISwap cljs.core/IMeta cljs.core/IDeref cljs.core/IPrintWithWriter}}, ->Track {:protocol-inline nil, :meta {:file "/Users/brian/projects/tomaat/.cljs_node_repl/reagent/ratom.cljs", :line 199, :column 10, :end-line 199, :end-column 15, :protocols #{cljs.core/IEquiv cljs.core/IHash reagent.ratom/IReactiveAtom cljs.core/IDeref cljs.core/IPrintWithWriter}, :skip-protocol-flag #{cljs.core/IEquiv cljs.core/IHash cljs.core/IDeref cljs.core/IPrintWithWriter}, :factory :positional, :arglists (quote ([f args reaction]))}, :protocols #{cljs.core/IEquiv cljs.core/IHash reagent.ratom/IReactiveAtom cljs.core/IDeref cljs.core/IPrintWithWriter}, :name reagent.ratom/->Track, :variadic false, :file ".cljs_node_repl/reagent/ratom.cljs", :end-column 15, :method-params ([f args reaction]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :line 199, :end-line 199, :max-fixed-arity 3, :fn-var true, :arglists (quote ([f args reaction])), :skip-protocol-flag #{cljs.core/IEquiv cljs.core/IHash cljs.core/IDeref cljs.core/IPrintWithWriter}}}, :cljs.spec/registry-ref [], :require-macros {reagent.ratom reagent.ratom, reagent.debug reagent.debug}, :cljs.analyzer/constants {:seen #{:on-set caught watching boolean reaction callback :meta :else path args :validator watches meta validator dirty? :no-cache ratom state :auto-run :on-dispose :tag :mutable changed auto-run nocache? f}, :order [state :mutable meta validator watches :meta :validator :else :on-dispose f args reaction :auto-run ratom path :on-set :no-cache dirty? :tag boolean nocache? watching auto-run caught callback changed]}, :doc nil}