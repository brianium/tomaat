{:rename-macros {}, :renames {}, :externs {__dirname {}}, :use-macros {}, :excludes #{}, :name ui.worker, :imports nil, :requires {electron electron}, :cljs.spec/speced-vars [], :uses {remote electron, ipcRenderer electron}, :defs {BrowserWindow {:name ui.worker/BrowserWindow, :file "/Users/brian/projects/tomaat/src/ui/worker.cljs", :line 4, :column 1, :end-line 4, :end-column 19, :meta {:file "/Users/brian/projects/tomaat/src/ui/worker.cljs", :line 4, :column 6, :end-line 4, :end-column 19}, :tag any}, current-window-id {:protocol-inline nil, :meta {:file "/Users/brian/projects/tomaat/src/ui/worker.cljs", :line 6, :column 7, :end-line 6, :end-column 24, :arglists (quote ([]))}, :name ui.worker/current-window-id, :variadic false, :file "/Users/brian/projects/tomaat/src/ui/worker.cljs", :end-column 24, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, create-worker {:protocol-inline nil, :meta {:file "/Users/brian/projects/tomaat/src/ui/worker.cljs", :line 11, :column 7, :end-line 11, :end-column 20, :arglists (quote ([on-load & rest])), :doc "Creates a worker and calls the given on-load handler. Returns the\n  created worker.", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(on-load rest)], :arglists ([on-load & rest]), :arglists-meta (nil)}}, :name ui.worker/create-worker, :variadic true, :file "/Users/brian/projects/tomaat/src/ui/worker.cljs", :end-column 20, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(on-load rest)], :arglists ([on-load & rest]), :arglists-meta (nil)}, :method-params [(on-load rest)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 1, :fn-var true, :arglists ([on-load & rest]), :doc "Creates a worker and calls the given on-load handler. Returns the\n  created worker."}, on {:protocol-inline nil, :meta {:file "/Users/brian/projects/tomaat/src/ui/worker.cljs", :line 24, :column 7, :end-line 24, :end-column 9, :arglists (quote ([event-name handler])), :doc "Handles an ipc renderer event"}, :name ui.worker/on, :variadic false, :file "/Users/brian/projects/tomaat/src/ui/worker.cljs", :end-column 9, :method-params ([event-name handler]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 2, :fn-var true, :arglists (quote ([event-name handler])), :doc "Handles an ipc renderer event"}, send {:protocol-inline nil, :meta {:file "/Users/brian/projects/tomaat/src/ui/worker.cljs", :line 29, :column 7, :end-line 29, :end-column 11, :arglists (quote ([worker event-name & rest])), :doc "Send a message to a worker window", :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(worker event-name rest)], :arglists ([worker event-name & rest]), :arglists-meta (nil)}}, :name ui.worker/send, :variadic true, :file "/Users/brian/projects/tomaat/src/ui/worker.cljs", :end-column 11, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(worker event-name rest)], :arglists ([worker event-name & rest]), :arglists-meta (nil)}, :method-params [(worker event-name rest)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 2, :fn-var true, :arglists ([worker event-name & rest]), :doc "Send a message to a worker window"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc nil}