{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name tomaat.ui.core, :imports nil, :requires {tomaat.ui.worker tomaat.ui.worker, goog.dom goog.dom, reagent reagent.core, tomaat.ui.settings tomaat.ui.settings, worker tomaat.ui.worker, data tomaat.data, reagent.core reagent.core, tomaat.ui.main tomaat.ui.main, tomaat.data tomaat.data, tomaat.ui.timer tomaat.ui.timer, settings tomaat.ui.settings, tomaat.ui.config tomaat.ui.config}, :cljs.spec/speced-vars [], :uses {main-screen tomaat.ui.main, getElement goog.dom, config-screen tomaat.ui.config, stop-timer tomaat.ui.timer, start-timer tomaat.ui.timer}, :defs {*state {:name tomaat.ui.core/*state, :file "/Users/brian/projects/tomaat/src/tomaat/ui/core.cljs", :line 14, :column 1, :end-line 14, :end-column 16, :meta {:file "/Users/brian/projects/tomaat/src/tomaat/ui/core.cljs", :line 14, :column 10, :end-line 14, :end-column 16}, :tag any}, toggle-screen {:protocol-inline nil, :meta {:file "/Users/brian/projects/tomaat/src/tomaat/ui/core.cljs", :line 21, :column 7, :end-line 21, :end-column 20, :arglists (quote ([e])), :doc "Changes the focused screen between the main and config screen"}, :name tomaat.ui.core/toggle-screen, :variadic false, :file "/Users/brian/projects/tomaat/src/tomaat/ui/core.cljs", :end-column 20, :method-params ([e]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 1, :fn-var true, :arglists (quote ([e])), :doc "Changes the focused screen between the main and config screen"}, start {:protocol-inline nil, :meta {:file "/Users/brian/projects/tomaat/src/tomaat/ui/core.cljs", :line 30, :column 7, :end-line 30, :end-column 12, :arglists (quote ([]))}, :name tomaat.ui.core/start, :variadic false, :file "/Users/brian/projects/tomaat/src/tomaat/ui/core.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 30, :end-line 30, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, stop {:protocol-inline nil, :meta {:file "/Users/brian/projects/tomaat/src/tomaat/ui/core.cljs", :line 34, :column 7, :end-line 34, :end-column 11, :arglists (quote ([]))}, :name tomaat.ui.core/stop, :variadic false, :file "/Users/brian/projects/tomaat/src/tomaat/ui/core.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 34, :end-line 34, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, update-setting {:protocol-inline nil, :meta {:file "/Users/brian/projects/tomaat/src/tomaat/ui/core.cljs", :line 38, :column 7, :end-line 38, :end-column 21, :arglists (quote ([k v]))}, :name tomaat.ui.core/update-setting, :variadic false, :file "/Users/brian/projects/tomaat/src/tomaat/ui/core.cljs", :end-column 21, :method-params ([k v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 38, :end-line 38, :max-fixed-arity 2, :fn-var true, :arglists (quote ([k v]))}, tomaat {:protocol-inline nil, :meta {:file "/Users/brian/projects/tomaat/src/tomaat/ui/core.cljs", :line 48, :column 7, :end-line 48, :end-column 13, :arglists (quote ([]))}, :name tomaat.ui.core/tomaat, :variadic false, :file "/Users/brian/projects/tomaat/src/tomaat/ui/core.cljs", :end-column 13, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 48, :end-line 48, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, app {:name tomaat.ui.core/app, :file "/Users/brian/projects/tomaat/src/tomaat/ui/core.cljs", :line 67, :column 1, :end-line 67, :end-column 9, :meta {:file "/Users/brian/projects/tomaat/src/tomaat/ui/core.cljs", :line 67, :column 6, :end-line 67, :end-column 9}, :tag any}, -main {:protocol-inline nil, :meta {:file "/Users/brian/projects/tomaat/src/tomaat/ui/core.cljs", :line 71, :column 7, :end-line 71, :end-column 12, :arglists (quote ([]))}, :name tomaat.ui.core/-main, :variadic false, :file "/Users/brian/projects/tomaat/src/tomaat/ui/core.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 71, :end-line 71, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :cljs.spec/registry-ref [], :require-macros {reagent reagent.core, reagent.core reagent.core}, :cljs.analyzer/constants {:seen #{:time :component-did-mount :start :update :toggle :flipped? :div :started? :stop :div.container :class :data}, :order [:flipped? :started? :time :data :div.container :div :class :toggle :start :stop :update :component-did-mount]}, :doc "Houses application state and defines actions and the main application component"}