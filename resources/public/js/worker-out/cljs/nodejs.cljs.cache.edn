{:rename-macros {}, :renames {}, :externs {console {log {apply {}}, error {apply {}}}}, :use-macros {}, :excludes #{require}, :name cljs.nodejs, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {require {:name cljs.nodejs/require, :file "resources/public/js/worker-out/cljs/nodejs.cljs", :line 16, :column 1, :end-line 16, :end-column 13, :meta {:file "/Users/brian/projects/tomaat/resources/public/js/worker-out/cljs/nodejs.cljs", :line 16, :column 6, :end-line 16, :end-column 13}, :tag any}, process {:name cljs.nodejs/process, :file "resources/public/js/worker-out/cljs/nodejs.cljs", :line 17, :column 1, :end-line 17, :end-column 13, :meta {:file "/Users/brian/projects/tomaat/resources/public/js/worker-out/cljs/nodejs.cljs", :line 17, :column 6, :end-line 17, :end-column 13}, :tag any}, enable-util-print! {:protocol-inline nil, :meta {:file "/Users/brian/projects/tomaat/resources/public/js/worker-out/cljs/nodejs.cljs", :line 19, :column 7, :end-line 19, :end-column 25, :arglists (quote ([]))}, :name cljs.nodejs/enable-util-print!, :variadic false, :file "resources/public/js/worker-out/cljs/nodejs.cljs", :end-column 25, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :cljs.spec/registry-ref [], :require-macros nil, :doc nil}