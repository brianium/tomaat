{:rename-macros {}, :renames {}, :externs {window {close {}}, setInterval {}, clearInterval {}}, :use-macros {}, :excludes #{}, :name worker.core, :imports nil, :requires {nodejs cljs.nodejs, cljs.nodejs cljs.nodejs, electron electron}, :cljs.spec/speced-vars [], :uses {remote electron, ipcRenderer electron}, :defs {reset-time! {:protocol-inline nil, :meta {:file "/Users/brian/projects/tomaat/src/worker/core.cljs", :line 14, :column 7, :end-line 14, :end-column 18, :arglists (quote ([*time]))}, :name worker.core/reset-time!, :variadic false, :file "/Users/brian/projects/tomaat/src/worker/core.cljs", :end-column 18, :method-params ([*time]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 1, :fn-var true, :arglists (quote ([*time]))}, tick {:protocol-inline nil, :meta {:file "/Users/brian/projects/tomaat/src/worker/core.cljs", :line 10, :column 7, :end-line 10, :end-column 11, :arglists (quote ([*time]))}, :name worker.core/tick, :variadic false, :file "/Users/brian/projects/tomaat/src/worker/core.cljs", :end-column 11, :method-params ([*time]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 1, :fn-var true, :arglists (quote ([*time]))}, format {:protocol-inline nil, :meta {:file "/Users/brian/projects/tomaat/src/worker/core.cljs", :line 14, :column 7, :end-line 14, :end-column 13, :arglists (quote ([time])), :doc "Given the time in seconds returns a minute value and a seconds value\n  as a vector"}, :name worker.core/format, :variadic false, :file "/Users/brian/projects/tomaat/src/worker/core.cljs", :end-column 13, :method-params ([time]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 1, :fn-var true, :arglists (quote ([time])), :doc "Given the time in seconds returns a minute value and a seconds value\n  as a vector"}, time-changed {:protocol-inline nil, :meta {:file "/Users/brian/projects/tomaat/src/worker/core.cljs", :line 22, :column 7, :end-line 22, :end-column 19, :arglists (quote ([contents time]))}, :name worker.core/time-changed, :variadic false, :file "/Users/brian/projects/tomaat/src/worker/core.cljs", :end-column 19, :method-params ([contents time]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 2, :fn-var true, :arglists (quote ([contents time]))}, BrowserWindow {:name worker.core/BrowserWindow, :file "/Users/brian/projects/tomaat/src/worker/core.cljs", :line 5, :column 1, :end-line 5, :end-column 19, :meta {:file "/Users/brian/projects/tomaat/src/worker/core.cljs", :line 5, :column 6, :end-line 5, :end-column 19}, :tag any}, minutes-and-seconds {:protocol-inline nil, :meta {:file "/Users/brian/projects/tomaat/src/worker/core.cljs", :line 14, :column 7, :end-line 14, :end-column 26, :arglists (quote ([time])), :doc "Given the time in seconds returns a minute value and a seconds value\n  as a vector"}, :name worker.core/minutes-and-seconds, :variadic false, :file "/Users/brian/projects/tomaat/src/worker/core.cljs", :end-column 26, :method-params ([time]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 1, :fn-var true, :arglists (quote ([time])), :doc "Given the time in seconds returns a minute value and a seconds value\n  as a vector"}, *interval {:name worker.core/*interval, :file "/Users/brian/projects/tomaat/src/worker/core.cljs", :line 8, :column 1, :end-line 8, :end-column 19, :meta {:file "/Users/brian/projects/tomaat/src/worker/core.cljs", :line 8, :column 10, :end-line 8, :end-column 19}, :tag any}, decrement! {:protocol-inline nil, :meta {:file "/Users/brian/projects/tomaat/src/worker/core.cljs", :line 10, :column 7, :end-line 10, :end-column 17, :arglists (quote ([*time]))}, :name worker.core/decrement!, :variadic false, :file "/Users/brian/projects/tomaat/src/worker/core.cljs", :end-column 17, :method-params ([*time]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 1, :fn-var true, :arglists (quote ([*time]))}, *time {:name worker.core/*time, :file "/Users/brian/projects/tomaat/src/worker/core.cljs", :line 7, :column 1, :end-line 7, :end-column 15, :meta {:file "/Users/brian/projects/tomaat/src/worker/core.cljs", :line 7, :column 10, :end-line 7, :end-column 15}, :tag any}, web-contents {:protocol-inline nil, :meta {:file "/Users/brian/projects/tomaat/src/worker/core.cljs", :line 27, :column 7, :end-line 27, :end-column 19, :arglists (quote ([id])), :doc "Get the webContents of a browser window identified by id"}, :name worker.core/web-contents, :variadic false, :file "/Users/brian/projects/tomaat/src/worker/core.cljs", :end-column 19, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 27, :end-line 27, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id])), :doc "Get the webContents of a browser window identified by id"}, stop-timer {:protocol-inline nil, :meta {:file "/Users/brian/projects/tomaat/src/worker/core.cljs", :line 40, :column 7, :end-line 40, :end-column 17, :arglists (quote ([event id]))}, :name worker.core/stop-timer, :variadic false, :file "/Users/brian/projects/tomaat/src/worker/core.cljs", :end-column 17, :method-params ([event id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 40, :end-line 40, :max-fixed-arity 2, :fn-var true, :arglists (quote ([event id]))}, start-timer {:protocol-inline nil, :meta {:file "/Users/brian/projects/tomaat/src/worker/core.cljs", :line 34, :column 7, :end-line 34, :end-column 18, :arglists (quote ([event id]))}, :name worker.core/start-timer, :variadic false, :file "/Users/brian/projects/tomaat/src/worker/core.cljs", :end-column 18, :method-params ([event id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 34, :end-line 34, :max-fixed-arity 2, :fn-var true, :arglists (quote ([event id]))}}, :cljs.spec/registry-ref [], :require-macros nil, :cljs.analyzer/constants {:seen #{:time-changed}, :order [:time-changed]}, :doc nil}